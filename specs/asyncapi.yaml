asyncapi: 2.0.0
id: https://github.com/IMAGINARY/future-democracy
info:
  description: WebSocket API for Future of Democracy server
  version: 1.0.0
  title: Future of Democracy Server WebSocket API
  contact:
    email: eric.londaits@imaginary.org
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  production:
    url: localhost:4850
    protocol: ws
    description: Default local server

channels:
  /:
    publish:
      description: Send messages to the API
      operationId: processReceivedMessage
      message:
        oneOf:
          - $ref: '#/components/messages/serverInfoReq'
          - $ref: '#/components/messages/sync'
          - $ref: '#/components/messages/ping'
    subscribe:
      description: Messages that you receive from the API
      operationId: sendMessage
      message:
        oneOf:
          - $ref: '#/components/messages/sync'
          - $ref: '#/components/messages/pong'
          - $ref: '#/components/messages/serverInfo'

components:
  messages:
    serverInfoReq:
      summary: Request information about the server.
      payload:
        $ref: "#/components/schemas/serverInfoReq"
      x-response:
        $ref: "#/components/schemas/serverInfo"
    serverInfo:
      summary: Information about the server.
      payload:
        $ref: "#/components/schemas/serverInfo"
    sync:
      summary: Synchronize the client with the server.
      payload:
        $ref: "#/components/schemas/sync"
      x-response:
        $ref: "#/components/schemas/sync"
    ping:
      summary: Ping the server to check if the connection is alive.
      payload:
        $ref: "#/components/schemas/ping"
      x-response:
        $ref: "#/components/schemas/pong"
    pong:
      summary: Response to a ping sent by the client.
      payload:
        $ref: "#/components/schemas/pong"
  schemas:
    serverInfoReq:
      type: object
      properties:
        type:
          type: string
          const: serverInfo
    serverInfo:
      type: object
      properties:
        type:
          type: string
          const: serverInfo
        serverId:
          type: string
    sync:
      type: object
      properties:
        type:
          type: string
          const: sync
        players:
          type: object
          properties:
            position:
              type: object
              properties:
                x:
                  type: number
                y:
                  type: number
            speed:
              type: object
              properties:
                x:
                  type: number
                y:
                  type: number
    ping:
      type: object
      properties:
        type:
          type: string
          const: ping
    pong:
      type: object
      properties:
        type:
          type: string
          const: pong
